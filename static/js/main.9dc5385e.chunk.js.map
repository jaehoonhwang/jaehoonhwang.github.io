{"version":3,"sources":["blog lazy /^/.//.*$/ groupOptions: {} namespace object","component/Header.js","component/Footer.js","component/ScrollUp.js","component/home/Page.js","component/blog/Constants.js","component/blog/CodeBlock.js","component/blog/Entry.js","component/blog/List.js","component/blog/Page.js","component/project/CodeTags.js","component/project/Constants.js","component/project/List.js","component/project/Page.js","App.js","serviceWorker.js","index.js","background.svg"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","header","props","className","Footer","Container","url","bgColor","ScrollUp","useState","showScroll","setShowScroll","window","addEventListener","pageYOffset","style","display","to","color","size","renderAs","onClick","scrollTo","top","behavior","HomePage","fluid","padding","margin","width","src","background","blogInfos","filename","date","title","summary","CodeBlock","this","language","value","dark","PureComponent","defaultProps","BlogEntry","state","match","params","markdownFile","markdown","metadata","filter","file","fetch","default","response","text","catch","err","console","log","undefined","setState","source","renderers","timestamp","Date","toDateString","Row","Col","React","Component","withRouter","BlogList","path","blog","index","CardGroup","key","Card","Body","Title","Subtitle","Text","BlogPage","ProjectList","marginTop","marginBottom","codes","i","Badge","pill","variant","projectInfos","languages","link","project","Link","href","ProjectPage","Navigation","Nav","defaultActiveKey","activeKey","activePage","onSelect","selectedKey","onPageUpdate","Item","hash","App","bind","basename","exact","repo","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9dc5385e.chunk.js","sourcesContent":["var map = {\n\t\"./20200905-Title.md\": [\n\t\t420,\n\t\t3\n\t],\n\t\"./20200906-Title.md\": [\n\t\t421,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 415;\nmodule.exports = webpackAsyncContext;","import React from 'react';\n\nconst websiteName = \"Jaehoon's Blog\";\n\nexport default function header(props) {\n    return (\n        <h1 className='page-header'>{websiteName}</h1>\n    );\n}","import React from 'react';\n\nimport {\n    Container,\n  } from 'react-bootstrap';  \n\nimport {\n    SocialIcon\n} from 'react-social-icons';\n\nconst iconColor = \"#A9A9A9\"\n\nexport default function Footer() {\n    return (\n        <Container>\n            <div className=\"footer-icons\">\n                <SocialIcon url=\"https://github.com/jaehoonhwang\" \n                    bgColor={iconColor}\n                    className=\"footer-icon\"/>\n                <SocialIcon url=\"https://www.linkedin.com/in/jaehoon-hwang/\" \n                    bgColor={iconColor}\n                    className=\"footer-icon\"/>\n            </div>\n        </Container>\n    );\n}","import React, {useState} from 'react';\n\nimport {\n    Link\n} from 'react-router-dom';\n\nimport {\n    ArrowUpCircle,\n    HouseDoor,\n    PencilSquare,\n} from 'react-bootstrap-icons';\n\nconst iconSize = 42;\nconst iconColor = \"orange\"; \n\nexport default function ScrollUp(props) {\n\n    const [showScroll, setShowScroll] = useState(false)\n\n    const checkScrollTop = () => {\n        if (!showScroll && window.pageYOffset > 400){\n          setShowScroll(true)\n        } else if (showScroll && window.pageYOffset <= 400){\n          setShowScroll(false)\n        }\n    };\n\n    const scrollTop = () => {\n        window.scrollTo({top: 0, behavior: 'smooth'})\n    }\n\n    window.addEventListener('scroll', checkScrollTop)\n\n    return (\n        <div className=\"footer-scroll-up\" style={{display: showScroll ? 'flex': 'none'}}>\n            <Link to=\"/\" >\n                <HouseDoor color={iconColor} size={iconSize} renderAs=\"button\" className=\"footer-icon\"/>\n            </Link>\n            <ArrowUpCircle \n                renderAs=\"button\"\n                className=\"scrollTop footer-icon\"\n                onClick={scrollTop}\n                size={iconSize}\n                color={iconColor}\n            />\n            <Link to=\"/blogs\">\n                <PencilSquare color={iconColor} size={iconSize} renderAs=\"button\" className=\"footer-icon\"/>\n            </Link>\n        </div>\n    );\n}","import React from 'react';\n\nimport background from 'background.svg';\n\nimport {\n    Container,\n  } from 'react-bootstrap';  \n\n\nexport default function HomePage() {\n    return (\n        <Container fluid \n            className=\"homepage\"\n            style ={{padding: 0, margin: 0, width: \"100%\"}}\n        >\n            <img className=\"background\" src={background}/>\n            <p>\n                a night owl joshing around with computers and things\n            </p>\n        </Container>\n    );\n}","export const blogInfos = [\n    {\n        filename: \"20200906-Title.md\",\n        date: \"2020-09-06T20:07:34.421735\",\n        title: \"Interesting Title \",\n        summary: \"Things to do \"\n    },\n    {\n        filename: \"20200905-Title.md\",\n        date: \"2020-09-05T20:07:34.421735\",\n        title: \"Test\",\n        summary: \"Things to test and I hate null exception\"\n    },\n];","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { dark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\nclass CodeBlock extends PureComponent {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    language: PropTypes.string\n  };\n\n  static defaultProps = {\n    language: null\n  };\n\n  render() {\n    const { language, value } = this.props;\n    return (\n      <SyntaxHighlighter language={language} style={dark}>\n        {value}\n      </SyntaxHighlighter>\n    );\n  }\n}\n\nexport default CodeBlock;","import React from 'react';\nimport 'component/blog/blog.css';\n\nimport {\n    Container,\n    Row,\n    Col\n  } from 'react-bootstrap';  \n\nimport ReactMarkdown from 'react-markdown';\n\nimport {\n    withRouter\n} from 'react-router-dom';\n\nimport {\n    Clock,\n    Pen,\n    Tags,\n} from 'react-bootstrap-icons';\n\nimport CodeBlock from 'component/blog/CodeBlock';\nimport {\n    blogInfos,\n} from 'component/blog/Constants';\n\n\n\nclass BlogEntry extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            filename: props.match.params.markdownFile,\n            markdown: \"\",\n            metadata: \"\",\n        };\n    }\n\n    async componentDidMount() {\n        // Ya gotta specify the path or else it won't know where the path is coming from.\n        // https://github.com/webpack/webpack/issues/6680\n        // You need this because apparently \"this\" doesn't come into scope for metadata\n        let filename = this.state.filename;\n\n        let metadata = blogInfos.filter( function (e) {\n            return e.filename === filename;\n        });\n\n        let text = await import('blog/' + filename)\n            .then(file => fetch(file.default))\n            .then(response => response.text())\n            .catch(err => console.log(err));\n\n        if (text !== undefined) {\n            this.setState({markdown: text});\n        }\n\n        this.setState({metadata: metadata[0]});\n    }\n\n    render() {\n        let markdown = this.state.markdown === \"\" ? (<div/>) : \n            <ReactMarkdown \n                source={this.state.markdown} \n                renderers={{ code: CodeBlock }}/>\n        let timestamp = new Date(this.state.metadata.date).toDateString();\n        let summary = this.state.metadata.summary;\n        return (\n            <Container fluid>\n                <Row>\n                    <Col>\n                    <Container>\n                    <ul className=\"entry_title_box\">\n                        <li>\n                            <h1>{this.state.metadata.title}</h1>\n                        </li>\n                        <li>\n                            <div>\n                                <Clock/>\n                                <i className=\"entry_timestamp\">{timestamp}</i>\n                            </div>\n                        </li>\n                        <li>\n                            <div>\n                                <Pen/>\n                                <i className=\"entry_timestamp\">{summary}</i>\n                            </div>\n                        </li>\n                        <li>\n                        <div>\n                            <Tags/>\n                        </div>\n                        </li>\n                    </ul>\n                    </Container>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                    <Container>\n                        {markdown}\n                    </Container>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default withRouter(BlogEntry);","import React from 'react';\n\nimport  {\n    Card,\n    CardGroup,\n    Container\n} from 'react-bootstrap';\n\nimport {\n    Switch,\n    Route,\n    Link,\n    withRouter,\n  } from \"react-router-dom\";\n\nimport {\n    blogInfos,\n} from 'component/blog/Constants';\n\nimport BlogEntry from 'component/blog/Entry';\n\nclass BlogList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            match: this.props.match,\n        };\n    }\n\n    render() {\n        let match = this.props.match;\n        return (\n            <div>\n            <Switch>\n                <Route path={`${match.path}/:markdownFile`}>\n                    <BlogEntry />\n                </Route>\n                <Route path={match.path}>\n                <Container>\n                    {\n                        blogInfos.map((blog, index) => {\n                            return (\n                            <CardGroup key={index}>\n                                <Card style={{ width: '18rem' }}>\n                                    <Card.Body>\n                                        <Card.Title>{blog.title}</Card.Title>\n                                        <Card.Subtitle className=\"mb-2 text-muted\">{new Date(blog.date).toDateString()}</Card.Subtitle>\n                                        <Card.Text>{blog.summary}</Card.Text>\n                                        <Link to={`${match.url}/${blog.filename}`}>Read More</Link>\n                                    </Card.Body>\n                                </Card>\n                            </CardGroup>\n                            );\n                        })\n                    }\n                </Container>\n                </Route>\n            </Switch>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(BlogList);","import React from 'react';\n\nimport {\n    withRouter\n} from 'react-router-dom';\n\nimport BlogList from 'component/blog/List';\n\nclass BlogPage extends React.Component {\n\n    render() {\n        return (\n            <BlogList />\n        );\n    }\n}\n\nexport default withRouter(BlogPage);","import React from 'react';\n\nimport  {\n    Badge, \n    Container,\n} from 'react-bootstrap';\n\nexport default function ProjectList(props) {\n\n    return (\n        <div style={{marginTop: \"1em\", marginBottom: \"1em\"}}>\n            {\n                props.codes.map((language, i) => {\n                    return (\n                        <Badge pill variant=\"primary\"className=\"footer-icon\">{language}</Badge>\n                    );\n                })\n            }\n        </div>\n    );\n}","const python = \"python\";\nconst cpp = \"c++\";\nconst java = \"java\";\nconst javascript = \"javascript\";\n\nexport const projectInfos = [\n    {\n        date: \"2020-09-06T20:07:34.421735\",\n        title: \"m a c h i n e l e a r n i n g\",\n        summary: \"Things to do \",\n        languages: [python, java],\n        link: \"https://github.com/jaehoonhwang/advent-of-code\"\n    },\n    {\n        date: \"2020-09-06T20:07:34.421735\",\n        title: \"React Native with Machine Learning Deep Fake neural network procedural generation\",\n        summary: \"Things to build \",\n        languages: [python, cpp],\n        link: \"https://github.com/jaehoonhwang/advent-of-code\"\n    },\n];","import React from 'react';\n\nimport  {\n    Card,\n    CardGroup,\n    Container,\n} from 'react-bootstrap';\n\nimport CodeTags from 'component/project/CodeTags';\n\nimport {\n    projectInfos,\n} from 'component/project/Constants';\n\nexport default function ProjectList(props) {\n\n    return (\n        <div>\n            <Container>\n                {\n                    projectInfos.map((project, index) => {\n                    console.log(project)\n                        return (\n                        <CardGroup key={index}>\n                            <Card style={{ width: '18rem' }}>\n                                <Card.Body>\n                                    <Card.Title>{project.title}</Card.Title>\n                                    <Card.Subtitle className=\"mb-2 text-muted\">{new Date(project.date).toDateString()}</Card.Subtitle>\n                                    <Card.Text>{project.summary}</Card.Text>\n                                    <CodeTags codes={project.languages}/>\n                                    <Card.Link href={project.link}>Project Link</Card.Link>\n                                </Card.Body>\n                            </Card>\n                        </CardGroup>\n                        );\n                    })\n                }\n            </Container>\n        </div>\n    );\n}","import React from 'react';\n\nimport {\n    Container,\n} from 'react-bootstrap';\n\nimport ProjectList from 'component/project/List';\n\nexport default function ProjectPage(props) {\n    return (\n        <Container>\n            <ProjectList />\n        </Container>\n    );\n}","import React from 'react';\nimport './App.scss';\n\nimport {\n  HashRouter as Router,\n  Route,\n} from \"react-router-dom\";\n\nimport {\n  Container,\n  Nav,\n  Row,\n  Col\n} from 'react-bootstrap';  \n\nimport Header from 'component/Header';\nimport Footer from 'component/Footer';\nimport ScrollUp from 'component/ScrollUp';\nimport HomePage from 'component/home/Page';\nimport BlogPage from 'component/blog/Page';\nimport ProjectPage from 'component/project/Page';\n\nconst repo = \"/\";\nconst homePage = repo + \"\";\nconst blogPage = repo + \"blogs\";\nconst projectPage = repo + \"projects\";\nconst hash = \"/#/\"\nconst hashHomePage = hash + \"\";\nconst hashBlogPage = hash + \"blogs\";\nconst hashProjectPage = hash + \"projects\";\n\nconst Navigation = (props) => {\n  return (\n    <Nav\n    defaultActiveKey={hashHomePage}\n    className=\"justify-content-center\"\n    variant=\"tabs\"\n    activeKey={props.activePage}\n    onSelect={(selectedKey) => props.onPageUpdate(selectedKey)}>\n      <Nav.Item>\n        <Nav.Link href={hashHomePage}>Home</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link href={hashBlogPage}>Blog</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link href={hashProjectPage}>Projects</Nav.Link>\n      </Nav.Item>\n    </Nav>\n  );\n}\n\nexport default class App extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      activePage: homePage,\n    };\n\n    this.onPageUpdate = this.onPageUpdate.bind(this);\n  }\n  \n  render() {\n    return (\n        <Router basename=\"/\">\n        <Container fluid className=\"main_container\">\n          <Row>\n            <Col>\n            <Container className=\"header_container\">\n              <Header />\n              <Navigation onPageUpdate={this.onPageUpdate}/>\n            </Container>\n            </Col>\n          </Row>\n          <Row className=\"page_body\">\n            <Col>\n              <Route exact path={homePage}>\n                <HomePage />\n              </Route>\n              <Route path={blogPage}>\n                <BlogPage />\n              </Route>\n              <Route path={projectPage}>\n                <ProjectPage />\n              </Route>\n            </Col>\n          </Row>\n          <Row className=\"footer\" style={{marginTop: \"10em\"}}>\n            <Col>\n              <ScrollUp/>\n              <Footer/>\n              <p>\n                <b>Ah, things are ok </b><i>(things were not okay)</i>\n              </p>\n            </Col>\n          </Row>\n        </Container>\n        </Router>\n    )\n  }\n\n  onPageUpdate(selectedKey) {\n    this.setState({activePage: selectedKey});\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/background.3cf5108a.svg\";"],"sourceRoot":""}